		ORG	0000H
		SJMP	MAIN

		ORG	000BH
		SJMP	CLOCK_AD			; CLOCK DO CONVERSOR AD

CLOCK_AD:
		CLR	EA
		CPL	P3.5
		MOV	TH0, #0FFH
		MOV	TL0, #0F5H
		SETB	EA
		RETI

MAIN:
		SETB	EA
		SETB	EX0				; INTERRUPCAO EXTERNA 0
		SETB	ET0				; INTERRUPCAO DO TIMER 0

		MOV	TH1, #0FFH
		MOV	TL1, #0F5H
		SETB	TR1
		MOV	TMOD, #10H


MAIN_LOOP:	MOV	DPTR, #256			; LEITURA DO AD - ENDERECOS SUPERIORES A 256H

		SETB	CHANEL0
		ACALL	SELECT_AD
		JB	P3.3, $
		MOVX	A, @DPTR
		MOV	DIGITAL_VAL0, A

		SETB	CHANEL1
		ACALL	SELECT_AD
		JB	P3.3, $
		MOVX	A, @DPTR
		MOV	DIGITAL_VAL1, A

		SETB	CHANEL2
		ACALL	SELECT_AD
		JB	P3.3, $
		MOVX	A, @DPTR
		MOV	DIGITAL_VAL2, A

		SETB	CHANEL3
		ACALL	SELECT_AD
		JB	P3.3, $
		MOVX	A, @DPTR
		MOV	DIGITAL_VAL3, A

		SETB	CHANEL4
		ACALL	SELECT_AD
		JB	P3.3, $
		MOVX	A, @DPTR
		MOV	DIGITAL_VAL4, A

		SETB	CHANEL5
		ACALL	SELECT_AD
		JB	P3.3, $
		MOVX	A, @DPTR
		MOV	DIGITAL_VAL5, A

		SETB	CHANEL6
		ACALL	SELECT_AD
		JB	P3.3, $
		MOVX	A, @DPTR
		MOV	DIGITAL_VAL6, A

		SETB	CHANEL7
		ACALL	SELECT_AD
		JB	P3.3, $
		MOVX	A, @DPTR
		MOV	DIGITAL_VAL7, A

		ACALL	SHOW_DATA
		SJMP	MAIN_LOOP
		SJMP	$

;************************************************
; SELECIONA O CANAL DO CONVERSOR AD		*
; DO CIRCUITO MAPEADO, A SELECAO EH FEITA POR	*
; ESCRITA EM ENDERECOS SUPERIORES A 256H, POIS	*
; ALE_AD = ~(A8 + (~WR))			*
; A8    ~WR    ALE_AD				*
; 0   |  0   |  1				*
; 0   |  1   |  0				*
; 1   |  0   |  0				*
; 1   |  1   |  0				*
; ONDE ALE_AD EH O PINO ALE DO CONVERSOR AD	*
;************************************************
SELECT_AD:
		MOV	A, #00H
		JB	CHANEL0, SEL_CHANEL0
		JB	CHANEL1, SEL_CHANEL1
		JB	CHANEL2, SEL_CHANEL2
		JB	CHANEL3, SEL_CHANEL3
		JB	CHANEL4, SEL_CHANEL4
		JB	CHANEL5, SEL_CHANEL5
		JB	CHANEL6, SEL_CHANEL6
		JB	CHANEL7, SEL_CHANEL7
SEL_CHANEL0:	MOV	DPTR, #256
		SJMP	END_SEL
SEL_CHANEL1:	MOV	DPTR, #257
		SJMP	END_SEL
SEL_CHANEL2:	MOV	DPTR, #258
		SJMP	END_SEL
SEL_CHANEL3:	MOV	DPTR, #259
		SJMP	END_SEL
SEL_CHANEL4:	MOV	DPTR, #260
		SJMP	END_SEL
SEL_CHANEL5:	MOV	DPTR, #261
		SJMP	END_SEL
SEL_CHANEL6:	MOV	DPTR, #262
		SJMP	END_SEL
SEL_CHANEL7:	MOV	DPTR, #263
		SJMP	END_SEL
END_SEL:	MOVX	@DPTR, A
		MOV	ALL_CHANEL, #00H
		RET

CONV_VALUES:	; STORING VOLTS * 17
		MOV	B, #17H
		; DIGITAL_VAL0 = DIGITAL_VAL0 / 17
		MOV	A, DIGITAL_VAL0
		DIV	AB
		MOV	DIGITAL_VAL0, A

		MOV	A, DIGITAL_VAL1
		DIV	AB
		MOV	DIGITAL_VAL1, A

		MOV	A, DIGITAL_VAL2
		DIV	AB
		MOV	DIGITAL_VAL2, A

		MOV	A, DIGITAL_VAL3
		DIV	AB
		MOV	DIGITAL_VAL3, A

		MOV	A, DIGITAL_VAL4
		DIV	AB
		MOV	DIGITAL_VAL4, A

		MOV	A, DIGITAL_VAL5
		DIV	AB
		MOV	DIGITAL_VAL5, A

		MOV	A, DIGITAL_VAL6
		DIV	AB
		MOV	DIGITAL_VAL6, A

		MOV	A, DIGITAL_VAL7
		DIV	AB
		MOV	DIGITAL_VAL7, A
		RET

SHOW_DATA:
		MOV	TMOD, #20H
		MOV	TH1, #253
		MOV	TL1, #253
		SETB	TR1
		MOV	SCON, #40H

		MOV	A, DIGITAL_VAL0
		ADD	A, #30H
		MOV	R0, A

		MOV	A, DIGITAL_VAL1
		ADD	A, #30H
		MOV	R1, A

		MOV	A, DIGITAL_VAL2
		ADD	A, #30H
		MOV	R2, A

		MOV	A, DIGITAL_VAL3
		ADD	A, #30H
		MOV	R3, A

		MOV	A, DIGITAL_VAL4
		ADD	A, #30H
		MOV	R4, A

		MOV	A, DIGITAL_VAL5
		ADD	A, #30H
		MOV	R5, A

		MOV	A, DIGITAL_VAL6
		ADD	A, #30H
		MOV	R6, A

		MOV	A, DIGITAL_VAL7
		ADD	A, #30H
		MOV	R7, A
		;************************** PRINTANDO VALORES NA TELA
		ACALL	PRINT_MSG

		MOV	SBUF, #'0'
		JNB	TI, $
		CLR	TI
		MOV	SBUF, R0
		JNB	TI, $
		CLR	TI
		ACALL	NEW_LINE

		MOV	SBUF, #'1'
		JNB	TI, $
		CLR	TI
		MOV	SBUF, R1
		JNB	TI, $
		CLR	TI
		ACALL	NEW_LINE

		ACALL	PRINT_MSG
		MOV	SBUF, #'2'
		JNB	TI, $
		CLR	TI
		MOV	SBUF, R2
		JNB	TI, $
		CLR	TI
		ACALL	NEW_LINE

		ACALL	PRINT_MSG
		MOV	SBUF, #'3'
		JNB	TI, $
		CLR	TI
		MOV	SBUF, R3
		JNB	TI, $
		CLR	TI
		ACALL	NEW_LINE

		ACALL	PRINT_MSG
		MOV	SBUF, #'4'
		JNB	TI, $
		CLR	TI
		MOV	SBUF, R4
		JNB	TI, $
		CLR	TI
		ACALL	NEW_LINE

		ACALL	PRINT_MSG
		MOV	SBUF, #'5'
		JNB	TI, $
		CLR	TI
		MOV	SBUF, R5
		JNB	TI, $
		CLR	TI
		ACALL	NEW_LINE

		ACALL	PRINT_MSG
		MOV	SBUF, #'6'
		JNB	TI, $
		CLR	TI
		MOV	SBUF, R6
		JNB	TI, $
		CLR	TI
		ACALL	NEW_LINE

		ACALL	PRINT_MSG
		MOV	SBUF, #'7'
		JNB	TI, $
		CLR	TI
		MOV	SBUF, R7
		JNB	TI, $
		CLR	TI
		ACALL	NEW_LINE
		RET

;****************************************
; PRINTA "VALOR ANALOGICO DE TENSAO"	*
;****************************************
PRINT_MSG:	PUSH	ACC
		PUSH	DP0L
		PUSH	DP0H
		MOV	TMOD, #20H
		MOV	TH1, #253
		MOV	TL1, #253
		SETB	TR1
		MOV	SCON, #40H
PRINT_LOOP:	CLR	A
		MOV	DPTR, #STD_MSG
		MOVC	A, @A+DPTR
		CJNE	A, #00, CONT
		SJMP	END_PRINT
CONT:		MOV	SBUF, A
		JNB	TI, $
		CLR	TI
		INC	DPTR
		SJMP	PRINT_LOOP
END_PRINT:	POP	DP0H
		POP	DP0L
		POP	ACC
		RET

NEW_LINE:
		MOV	TMOD, #20H
		MOV	TH1, #253
		MOV	TL1, #253
		SETB	TR1
		MOV	SCON, #40H
		MOV	SBUF, #0AH
		JNB	TI, $
		CLR	TI
		RET

;********************************
; MEMORIA ENDERECAVEL A BIT.	*
; CADA BIT SETADO REPRESENTA	*
; UM CANAL AD SELECIONADO.	*
;********************************
ALL_CHANEL	EQU	20H
CHANEL0		EQU	20H.0
CHANEL1		EQU	20H.1
CHANEL2		EQU	20H.2
CHANEL3		EQU	20H.3
CHANEL4		EQU	20H.4
CHANEL5		EQU	20H.5
CHANEL6		EQU	20H.6
CHANEL7		EQU	20H.7

DIGITAL_VAL0	EQU	30H
DIGITAL_VAL1	EQU	31H
DIGITAL_VAL2	EQU	32H
DIGITAL_VAL3	EQU	33H
DIGITAL_VAL4	EQU	34H
DIGITAL_VAL5	EQU	35H
DIGITAL_VAL6	EQU	36H
DIGITAL_VAL7	EQU	37H

STD_MSG:	DB	'VALOR ANALOGICO DA TENSAO', 0
		END